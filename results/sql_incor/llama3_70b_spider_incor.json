{
    "res_list": [
        0,
        0,
        -1,
        1,
        1,
        1,
        -1,
        1,
        -1,
        1,
        0,
        1,
        0,
        -1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        0,
        -1,
        1,
        -1,
        -1,
        1,
        1,
        0,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1
    ],
    "ex": 0.7128712871287128,
    "sql_incor": [
        "SELECT COUNT(h.head_ID) FROM head h JOIN management m ON h.head_ID = m.head_ID WHERE h.age > 56;",
        "SELECT h.name, h.born_state, h.age FROM head h JOIN management m ON h.head_ID = m.head_ID JOIN department d ON m.department_ID = d.Department_ID ORDER BY h.age;",
        "SELECT COUNT(temporary_acting)  FROM management;",
        "SELECT DISTINCT h.age FROM head h JOIN management m ON h.head_ID = m.head_ID WHERE m.temporary_acting = 'acting';",
        "SELECT Farm_ID, SUM(Total_Horses) AS Total_Horses_Record FROM farm GROUP BY Farm_ID ORDER BY Total_Horses_Record ASC;",
        "SELECT Year, Theme FROM farm_competition ORDER BY Year ASC;",
        "SELECT Theme, Year FROM farm_competition ORDER BY Year ASC;",
        "SELECT Status, COUNT(*) as Num_Cities FROM city GROUP BY Status ORDER BY Num_Cities DESC;",
        "SELECT Status, COUNT(*) as frequency FROM city GROUP BY Status ORDER BY frequency ASC;",
        "SELECT Status, COUNT(*) as count FROM city GROUP BY Status ORDER BY count DESC LIMIT 1;",
        "SELECT Status, COUNT(*) as count FROM city GROUP BY Status ORDER BY count DESC LIMIT 1;",
        "SELECT c.course_id, c.course_name, COUNT(scr.student_id) as num_registered_students FROM Student_Course_Registrations scr JOIN Courses c ON scr.course_id = c.course_id GROUP BY scr.course_id, c.course_name ORDER BY num_registered_students DESC LIMIT 1;",
        "SELECT student_id FROM Student_Course_Registrations GROUP BY student_id HAVING COUNT(course_id) = (   SELECT MIN(cnt)   FROM (     SELECT student_id, COUNT(course_id) AS cnt     FROM Student_Course_Registrations     GROUP BY student_id   ) AS subquery )",
        "SELECT student_id FROM Student_Course_Registrations GROUP BY student_id HAVING COUNT(course_id) = (   SELECT MIN(cnt)   FROM (     SELECT student_id, COUNT(course_id) AS cnt     FROM Student_Course_Registrations     GROUP BY student_id   ) AS subquery );",
        "SELECT s.student_id, p.first_name, p.last_name, c.course_name, scr.registration_date FROM Students s JOIN People p ON s.student_id = p.person_id JOIN Student_Course_Registrations scr ON s.student_id = scr.student_id JOIN Courses c ON scr.course_id = c.course_id ORDER BY scr.registration_date DESC LIMIT 1;",
        "SELECT s.student_id, p.first_name, p.last_name, c.course_name, scr.registration_date FROM Students s JOIN People p ON s.student_id = p.person_id JOIN Student_Course_Registrations scr ON s.student_id = scr.student_id JOIN Courses c ON scr.course_id = c.course_id ORDER BY scr.registration_date DESC LIMIT 1;",
        "SELECT s.student_id, p.first_name, p.last_name, COUNT(sc.course_id) as total_courses FROM Students s JOIN People p ON s.student_id = p.person_id JOIN Student_Course_Registrations sc ON s.student_id = sc.student_id GROUP BY s.student_id, p.first_name, p.last_name ORDER BY total_courses DESC LIMIT 1;",
        "SELECT s.student_id, p.first_name, p.middle_name, p.last_name, COUNT(cr.course_id) AS num_courses FROM Students s JOIN People p ON s.student_id = p.person_id JOIN Student_Course_Registrations cr ON s.student_id = cr.student_id GROUP BY s.student_id, p.first_name, p.middle_name, p.last_name ORDER BY num_courses DESC LIMIT 1;",
        "SELECT c.course_id, c.course_name, COUNT(scr.student_id) AS num_students_registered FROM Courses c JOIN Student_Course_Registrations scr ON c.course_id = scr.course_id GROUP BY c.course_id, c.course_name;",
        "SELECT student_id FROM Student_Course_Registrations WHERE course_id = 301 ORDER BY registration_date DESC LIMIT 1;",
        "SELECT student_id FROM Student_Course_Registrations WHERE course_id = 301 ORDER BY registration_date DESC LIMIT 1;",
        "SELECT DISTINCT city  FROM Addresses;"
    ],
    "sql_gen_clean": [
        "SELECT COUNT(h.head_ID) FROM head h JOIN management m ON h.head_ID = m.head_ID WHERE h.age > 56;",
        "SELECT h.name, h.born_state, h.age FROM head h JOIN management m ON h.head_ID = m.head_ID JOIN department d ON m.department_ID = d.Department_ID ORDER BY h.age;",
        "SELECT EXTRACT(YEAR FROM Creation) AS Creation_Year, Name, Budget_in_Billions FROM department;",
        "SELECT MAX(Budget_in_Billions) AS Max_Budget, MIN(Budget_in_Billions) AS Min_Budget FROM department;",
        "SELECT AVG(Num_Employees) FROM department WHERE Ranking BETWEEN 10 AND 15;",
        "SELECT h.name FROM head h WHERE h.born_state <> 'California';",
        "SELECT DISTINCT YEAR(d.Creation) FROM department d JOIN management m ON d.Department_ID = m.department_ID JOIN head h ON m.head_ID = h.head_ID WHERE h.born_state = 'Alabama';",
        "SELECT born_state FROM head GROUP BY born_state HAVING COUNT(*) >= 3;",
        "SELECT EXTRACT(YEAR FROM Creation) AS year, COUNT(*) AS num_departments FROM department GROUP BY year ORDER BY num_departments DESC LIMIT 1;",
        "SELECT d.Name, d.Num_Employees FROM department d JOIN management m ON d.Department_ID = m.department_ID JOIN head h ON m.head_ID = h.head_ID WHERE m.temporary_acting = 'Yes';",
        "SELECT COUNT(temporary_acting)  FROM management;",
        "SELECT COUNT(*) FROM department d LEFT JOIN management m ON d.Department_ID = m.department_ID WHERE m.head_ID IS NULL;",
        "SELECT DISTINCT h.age FROM head h JOIN management m ON h.head_ID = m.head_ID WHERE m.temporary_acting = 'acting';",
        "SELECT born_state FROM head WHERE head_ID IN (   SELECT h.head_ID   FROM department d   JOIN management m ON d.Department_ID = m.department_ID   JOIN head h ON m.head_ID = h.head_ID   WHERE d.Name IN ('Treasury', 'Homeland Security') ) GROUP BY born_state HAVING COUNT(DISTINCT d.Name) = 2;",
        "SELECT d.Department_ID, d.Name, COUNT(h.head_ID) AS num_heads FROM department d JOIN management m ON d.Department_ID = m.department_ID JOIN head h ON m.head_ID = h.head_ID GROUP BY d.Department_ID, d.Name HAVING COUNT(h.head_ID) > 1;",
        "SELECT head_ID, name  FROM head  WHERE name LIKE '%Ha%';",
        "SELECT COUNT(*)  FROM farm;",
        "SELECT COUNT(*)  FROM farm;",
        "SELECT SUM(Total_Horses)  FROM farm  GROUP BY Year  ORDER BY SUM(Total_Horses) ASC;",
        "SELECT Farm_ID, SUM(Total_Horses) AS Total_Horses_Record FROM farm GROUP BY Farm_ID ORDER BY Total_Horses_Record ASC;",
        "SELECT Hosts FROM farm_competition WHERE Theme <> 'Aliens';",
        "SELECT Hosts FROM farm_competition WHERE Theme != 'Aliens';",
        "SELECT Year, Theme FROM farm_competition ORDER BY Year ASC;",
        "SELECT Theme, Year FROM farm_competition ORDER BY Year ASC;",
        "SELECT AVG(Working_Horses)  FROM farm  WHERE Total_Horses > 5000;",
        "SELECT AVG(Working_Horses)  FROM farm  WHERE Total_Horses > 5000;",
        "SELECT MAX(Cows), MIN(Cows) FROM farm;",
        "SELECT MAX(Cows), MIN(Cows)  FROM farm;",
        "SELECT COUNT(DISTINCT Status)  FROM city;",
        "SELECT COUNT(DISTINCT Status)  FROM city;",
        "SELECT Official_Name FROM city ORDER BY Population DESC;",
        "SELECT Official_Name FROM city ORDER BY Population DESC;",
        "SELECT Official_Name, Status FROM city ORDER BY Population DESC LIMIT 1;",
        "SELECT Official_Name, Status FROM city WHERE Population = (SELECT MAX(Population) FROM city);",
        "SELECT fc.Year, c.Official_Name FROM farm_competition fc JOIN city c ON fc.Host_city_ID = c.City_ID;",
        "SELECT fc.Year, c.Official_Name FROM farm_competition fc JOIN city c ON fc.Host_city_ID = c.City_ID;",
        "SELECT c.Official_Name FROM city c JOIN farm_competition fc ON c.City_ID = fc.Host_city_ID GROUP BY c.Official_Name HAVING COUNT(DISTINCT fc.Competition_ID) > 1;",
        "SELECT c.Official_Name FROM city c JOIN farm_competition fc ON c.City_ID = fc.Host_city_ID GROUP BY c.Official_Name HAVING COUNT(DISTINCT fc.Competition_ID) > 1;",
        "SELECT c.Status FROM city c JOIN (   SELECT Host_city_ID, COUNT(*) as count   FROM farm_competition   GROUP BY Host_city_ID   ORDER BY count DESC   LIMIT 1 ) AS sub ON c.City_ID = sub.Host_city_ID;",
        "SELECT c.Status FROM city c JOIN (   SELECT Host_city_ID, COUNT(*) as num_competitions   FROM farm_competition   GROUP BY Host_city_ID   ORDER BY num_competitions DESC   LIMIT 1 ) AS fc ON c.City_ID = fc.Host_city_ID;",
        "SELECT fc.Theme FROM farm_competition fc JOIN city c ON fc.Host_city_ID = c.City_ID WHERE c.Population > 1000;",
        "SELECT fc.Theme FROM farm_competition fc JOIN city c ON fc.Host_city_ID = c.City_ID WHERE c.Population > 1000;",
        "SELECT Status, AVG(Population) AS Average_Population FROM city GROUP BY Status;",
        "SELECT Status, AVG(Population) AS Average_Population FROM city GROUP BY Status;",
        "SELECT Status, COUNT(*) as Num_Cities FROM city GROUP BY Status ORDER BY Num_Cities DESC;",
        "SELECT Status, COUNT(*) as frequency FROM city GROUP BY Status ORDER BY frequency ASC;",
        "SELECT Status, COUNT(*) as count FROM city GROUP BY Status ORDER BY count DESC LIMIT 1;",
        "SELECT Status, COUNT(*) as count FROM city GROUP BY Status ORDER BY count DESC LIMIT 1;",
        "SELECT Official_Name FROM city WHERE City_ID NOT IN (SELECT Host_city_ID FROM farm_competition);",
        "SELECT Official_Name FROM city WHERE City_ID NOT IN (   SELECT Host_city_ID   FROM farm_competition );",
        "SELECT DISTINCT Status  FROM city  WHERE Population > 1500 AND Population < 5000;",
        "SELECT DISTINCT Status FROM city WHERE Status IN (   SELECT Status   FROM city   WHERE Population > 1500 ) AND Status IN (   SELECT Status   FROM city   WHERE Population < 500 );",
        "SELECT Official_Name FROM city WHERE Population > 1500 OR Population < 500;",
        "SELECT Official_Name  FROM city  WHERE Population > 1500 OR Population < 500;",
        "SELECT Census_Ranking FROM city WHERE Status != 'Village';",
        "SELECT Census_Ranking FROM city WHERE Status != 'Village';",
        "SELECT c.course_id, c.course_name, COUNT(scr.student_id) as num_registered_students FROM Student_Course_Registrations scr JOIN Courses c ON scr.course_id = c.course_id GROUP BY scr.course_id, c.course_name ORDER BY num_registered_students DESC LIMIT 1;",
        "SELECT c.course_name FROM Courses c JOIN Student_Course_Registrations r ON c.course_id = r.course_id GROUP BY c.course_name ORDER BY COUNT(r.student_id) DESC LIMIT 1;",
        "SELECT student_id FROM Student_Course_Registrations GROUP BY student_id HAVING COUNT(course_id) = (   SELECT MIN(cnt)   FROM (     SELECT student_id, COUNT(course_id) AS cnt     FROM Student_Course_Registrations     GROUP BY student_id   ) AS subquery )",
        "SELECT student_id FROM Student_Course_Registrations GROUP BY student_id HAVING COUNT(course_id) = (   SELECT MIN(cnt)   FROM (     SELECT student_id, COUNT(course_id) AS cnt     FROM Student_Course_Registrations     GROUP BY student_id   ) AS subquery );",
        "SELECT p.first_name, p.last_name FROM Candidates c JOIN People p ON c.candidate_id = p.person_id;",
        "SELECT p.first_name, p.last_name FROM People p JOIN Candidates c ON p.person_id = c.candidate_id;",
        "SELECT s.student_id FROM Students s LEFT JOIN Student_Course_Attendance sca ON s.student_id = sca.student_id WHERE sca.student_id IS NULL;",
        "SELECT s.student_id FROM Students s LEFT JOIN Student_Course_Attendance sca ON s.student_id = sca.student_id WHERE sca.student_id IS NULL;",
        "SELECT student_id FROM Student_Course_Attendance;",
        "SELECT student_id FROM Student_Course_Attendance GROUP BY student_id HAVING COUNT(*) > 0;",
        "SELECT s.student_id, c.course_name FROM Students s JOIN Student_Course_Registrations scr ON s.student_id = scr.student_id JOIN Courses c ON scr.course_id = c.course_id;",
        "SELECT s.student_id, p.first_name, p.last_name, c.course_name, scr.registration_date FROM Students s JOIN People p ON s.student_id = p.person_id JOIN Student_Course_Registrations scr ON s.student_id = scr.student_id JOIN Courses c ON scr.course_id = c.course_id ORDER BY scr.registration_date DESC LIMIT 1;",
        "SELECT s.student_id, p.first_name, p.last_name, c.course_name, scr.registration_date FROM Students s JOIN People p ON s.student_id = p.person_id JOIN Student_Course_Registrations scr ON s.student_id = scr.student_id JOIN Courses c ON scr.course_id = c.course_id ORDER BY scr.registration_date DESC LIMIT 1;",
        "SELECT COUNT(DISTINCT s.student_id) FROM Students s JOIN Student_Course_Registrations scr ON s.student_id = scr.student_id JOIN Courses c ON scr.course_id = c.course_id WHERE c.course_name = 'English';",
        "SELECT COUNT(DISTINCT s.student_id) FROM Students s JOIN Student_Course_Registrations scr ON s.student_id = scr.student_id JOIN Courses c ON scr.course_id = c.course_id WHERE c.course_name LIKE '%English%';",
        "SELECT COUNT(DISTINCT course_id) FROM Student_Course_Registrations WHERE student_id = 171;",
        "SELECT COUNT(DISTINCT course_id) FROM Student_Course_Attendance WHERE student_id = 171;",
        "SELECT c.candidate_id FROM Candidates c JOIN People p ON c.candidate_id = p.person_id WHERE p.email_address = 'stanley.monahan@example.org';",
        "SELECT c.candidate_id FROM Candidates c JOIN People p ON c.candidate_id = p.person_id WHERE p.email_address = 'stanley.monahan@example.org';",
        "SELECT ca.candidate_id FROM Candidate_Assessments ca JOIN Candidates c ON ca.candidate_id = c.candidate_id JOIN Student_Course_Registrations scr ON c.candidate_id = scr.student_id JOIN Courses co ON scr.course_id = co.course_id ORDER BY scr.registration_date DESC LIMIT 1;",
        "SELECT ca.candidate_id FROM Candidate_Assessments ca JOIN Candidates c ON ca.candidate_id = c.candidate_id JOIN Student_Course_Registrations scr ON c.candidate_id = scr.student_id JOIN Courses co ON scr.course_id = co.course_id ORDER BY ca.assessment_date DESC LIMIT 1;",
        "SELECT s.student_id, p.first_name, p.last_name, COUNT(sc.course_id) as total_courses FROM Students s JOIN People p ON s.student_id = p.person_id JOIN Student_Course_Registrations sc ON s.student_id = sc.student_id GROUP BY s.student_id, p.first_name, p.last_name ORDER BY total_courses DESC LIMIT 1;",
        "SELECT s.student_id, p.first_name, p.middle_name, p.last_name, COUNT(cr.course_id) AS num_courses FROM Students s JOIN People p ON s.student_id = p.person_id JOIN Student_Course_Registrations cr ON s.student_id = cr.student_id GROUP BY s.student_id, p.first_name, p.middle_name, p.last_name ORDER BY num_courses DESC LIMIT 1;",
        "SELECT s.student_id, COUNT(cr.course_id) AS num_registered_courses FROM Students s JOIN Student_Course_Registrations cr ON s.student_id = cr.student_id GROUP BY s.student_id;",
        "SELECT s.student_id, COUNT(cr.course_id) AS num_courses_registered FROM Students s JOIN Student_Course_Registrations cr ON s.student_id = cr.student_id GROUP BY s.student_id;",
        "SELECT c.course_name, COUNT(scr.student_id) AS num_registered_students FROM Courses c JOIN Student_Course_Registrations scr ON c.course_id = scr.course_id GROUP BY c.course_name;",
        "SELECT c.course_id, c.course_name, COUNT(scr.student_id) AS num_students_registered FROM Courses c JOIN Student_Course_Registrations scr ON c.course_id = scr.course_id GROUP BY c.course_id, c.course_name;",
        "SELECT candidate_id FROM Candidate_Assessments WHERE assessment_outcome_code = 'Pass';",
        "SELECT candidate_id  FROM Candidate_Assessments  WHERE asessment_outcome_code = 'Pass';",
        "SELECT p.cell_mobile_number FROM People p JOIN Candidates c ON p.person_id = c.candidate_id JOIN Candidate_Assessments ca ON c.candidate_id = ca.candidate_id WHERE ca.assessment_outcome_code = 'Fail';",
        "SELECT p.cell_mobile_number FROM People p JOIN Candidates c ON p.person_id = c.person_id JOIN Candidate_Assessments ca ON c.candidate_id = ca.candidate_id WHERE ca.assessment_outcome_code = 'Fail';",
        "SELECT student_id  FROM Student_Course_Registrations  WHERE course_id = 301;",
        "SELECT student_id  FROM Student_Course_Registrations  WHERE course_id = 301;",
        "SELECT student_id FROM Student_Course_Registrations WHERE course_id = 301 ORDER BY registration_date DESC LIMIT 1;",
        "SELECT student_id FROM Student_Course_Registrations WHERE course_id = 301 ORDER BY registration_date DESC LIMIT 1;",
        "SELECT DISTINCT city FROM Addresses JOIN People_Addresses ON Addresses.address_id = People_Addresses.address_id JOIN People ON People_Addresses.person_id = People.person_id;",
        "SELECT DISTINCT city  FROM Addresses;",
        "SELECT DISTINCT a.city FROM Addresses a JOIN People_Addresses pa ON a.address_id = pa.address_id JOIN People p ON pa.person_id = p.person_id JOIN Students s ON p.person_id = s.student_id;",
        "SELECT DISTINCT a.city FROM Addresses a JOIN People_Addresses pa ON a.address_id = pa.address_id JOIN People p ON pa.person_id = p.person_id JOIN Students s ON p.person_id = s.student_id;",
        "SELECT course_name FROM Courses ORDER BY course_name ASC;",
        "SELECT course_name FROM Courses ORDER BY course_name ASC;",
        "SELECT first_name FROM People ORDER BY first_name ASC;",
        "SELECT first_name FROM People ORDER BY first_name ASC;",
        "SELECT student_id FROM Student_Course_Registrations UNION SELECT student_id FROM Student_Course_Attendance;",
        "SELECT student_id FROM Student_Course_Registrations UNION SELECT student_id FROM Student_Course_Attendance;"
    ]
}